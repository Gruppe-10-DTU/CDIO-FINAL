@startuml
skinparam linetype polyline
skinparam linetype ortho

Class Player {
 - name: String
 - soldSigns: int
 + Player(String name, int balance, Character character)
 + setBalance(int value) : boolean
 + getBalance() : int
}
Class Character {
 - name: String
 - image: String
 + Character(String name, String image)
}
Class GameBoard{
}
Class Balance {
  - balance : int
  + balance(int startingValue)
}
Abstract Field {
 # name : string
 # iD : int
}

Class Property {
 - color : String
 - price : int
 - rent : int
}
Class Empty{

}

Class Chance {

}

Class Jail {

}

Class ToJail {
 + jailPlayer(Player player)
}

Abstract ChanceCard{
 # name : String
}

Class Choice {

}

Class MoveXSteps {
 - minSteps : int
 - maxSteps : int
}
Class MoveToColor {
 - colorTargets : String[*]
}

Class MoveToField {
 - fieldName : String
}

Class CharacterSpecific {
 - character : Character
}

Class ChangeBalance {
 - effect : int
}

Class GetOutOfJail {

}

Class Die {
 Int faceValue
 - sides : int
 + Die(int sides)
 + Die()
 + roll() : int
}
Class Language {
 - String lang
 - languageValues : String[*][]
 + updateLanguage(String language)
 + getLanguageValue(String key) : String
}

ChanceCard <|-- Choice
ChanceCard <|-- CharacterSpecific
ChanceCard <|-- ChangeBalance
ChanceCard <|-- GetOutOfJail
ChanceCard <|-- MoveXSteps
ChanceCard <|-- MoveToField
ChanceCard <|-- MoveToColor

Field <|-- Property
Field <|-- Empty
Field <|-- Chance
Field <|-- Jail
Field <|-- ToJail

Player "1" o-- "0..1" GetOutOfJail
Player "1" o-- "0..1" CharacterSpecific
Player "1" o-- "1" Balance
Player "1" o-- "1" Character
Game "1" o-- "1..*" Language
Game "1" o-left- "1" GameBoard
Game "1" o-- "20" ChanceCard
Game"1" o-- "1" Die
Game "1" o-right- "2..4" Player
GameBoard "1" *-- "24" Field
Property "1" o-- "0..1" Player
Jail "1" o-- "0..4" Player
@enduml